{"version":3,"sources":["js-es6.js"],"names":[],"mappings":"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","file":"js.js","sourcesContent":["$(() => {\n  abc.initialize()\n  // ebot.updateDocumentation(abc)\n})\n\nlet abc = {\n  \n  initialize: () => {\n    abc.socket = io()\n    abc.assignInitialHandlers()\n\n    // $(\"#resizable-test\").resizable().css(\"width\", \"100px\").css(\"height\", \"100px\").css(\"background-color\", \"pink\")\n\n  },\n\n  assignInitialHandlers: () => {\n    abc.assignHandlerChat()\n    abc.assignHanderDrag()\n    abc.assignHandlerAddDiv()\n  },\n\n  assignHandlerChat: () => {\n    $('form').submit(() => {\n      abc.socket.emit('chat message', $('#m').val())\n      $('#m').val('')\n      return false\n    })\n    \n    abc.socket.on('chat message', msg => {\n      $('#messages').append($('<li>').text(msg))\n    })\n  },\n\n  assignHanderDrag: () => {\n\n    // let draggableOptions = {\n    //   //grid: [ 50, 20 ],\n    //   drag: (event, ui) => {\n    //     // console.log(\"X: \" + event.clientX)\n    //     // console.log(\"Y: \" + event.clientY)\n    //     // console.log(ui)\n    //     // console.log(event)\n    //     // console.log(ui.helper[0].id)\n\n    //     let emitObj = {\n    //       id: ui.helper[0].id,\n    //       x: event.clientX,\n    //       y: event.clientY\n    //     }\n\n    //     abc.socket.emit('element dragged', emitObj)\n\n    //   }\n    // }\n    \n    $(\"#draggable\").draggable(abc.draggableOptions)\n    \n    abc.socket.on('element dragged', emitObj => {\n      $('#' + emitObj.id).css(\"top\", emitObj.y)\n      $('#' + emitObj.id).css(\"left\", emitObj.x)\n    })\n\n  },\n\n  assignHandlerAddDiv: () => {\n    $(\"#add-div\").click(e => {\n      let ranTop = ebot.getRandomInt(100, 500)\n      let ranLeft = ebot.getRandomInt(100, 500)\n      let randomColor = `rgba(${ebot.getRandomInt(0, 255)}, ${ebot.getRandomInt(0, 255)}, ${ebot.getRandomInt(0, 255)}, 0.8)`\n      let id = `dynamically-added-div-${abc.currentDynamicDivId}`\n      let htmlString = `<div id='${id}' style='position:absolute; top:${ranTop}px; left:${ranLeft}px; background-color: ${randomColor}; width: 100px; height: 100px;'></div>`\n      $(\"body\").append(htmlString)\n      $(`#${id}`).resizable().draggable(abc.draggableOptions) \n\n      abc.socket.emit('div added')\n      abc.currentDynamicDivId++\n    })\n\n    abc.socket.on('div added', () => {\n      $(\"#add-div\").click()\n    })\n  },\n\n  dragDelay: 1,\n  \n  dragCounter: 0,\n\n  socket: {},\n\n  currentDynamicDivId: 1,\n\n  draggableOptions: {\n    drag: (event, ui) => {\n      let emitObj = {\n        id: ui.helper[0].id,\n        x: event.clientX,\n        y: event.clientY\n      }\n\n      abc.socket.emit('element dragged', emitObj)\n    }\n  }\n\n}\n\n"]}